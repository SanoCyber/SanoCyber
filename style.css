/* ============================================= */
/* ================ GLOBAL STYLES ============== */
/* ============================================= */


/*
  The Tailwind HTML files now specify 'Inter' font in their <style> block or via Tailwind config.
  If you want to enforce "Segoe UI" globally and override Tailwind's body font, you could add:
  body {
    font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  }
  However, the provided HTMLs are set up for 'Inter'.
  The background color for the body (e.g., bg-gray-50) is handled by Tailwind in the HTML.
  The flexbox sticky footer pattern (html, body { height: 100%; display: flex; ...} main { flex: 1 0 auto; })
  is implemented in the new HTML files using Tailwind classes on the body (e.g., `flex flex-col min-h-screen`)
  and main (`flex-grow`). So, these global CSS rules are no longer needed for that.
*/


/* ============================================= */
/* ================== HEADER =================== */
/* ============================================= */

/*
  Header, .nav-container, .logo, and general .nav-links styling are now
  handled by Tailwind utility classes in the HTML files.
  The .active-link class for navigation items is also directly applied in the HTML of each page
  (e.g., <a href="index.html" class="text-blue-600 font-semibold border-b-2 border-blue-600 pb-1">Home</a>).
  The JavaScript for dynamically changing .active-link on click has been removed from script.js
  as it's simpler for static page navigation.
*/

/* Styles for the mobile navigation menu when it's toggled 'active' by JavaScript */
/* This is the primary CSS needed from your original file for the new setup. */
.nav-links.active {
  display: flex !important; /* Ensures it overrides Tailwind's 'hidden' or other display properties */
  flex-direction: column;
  background: #050b2a; /* Your original mobile menu background */
  position: absolute;
  top: 60px; /* Adjust based on your actual header height (approx 3.75rem or py-3 in Tailwind) */
  left: 0;
  right: 0;
  width: 100%;
  text-align: center;
  z-index: 9998; /* Ensures it's above content but below a potentially higher z-index header */
  padding-top: 0.5rem;
  padding-bottom: 1rem;
  border-top: 1px solid #1f3bb3; /* Your original separator */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: adds some depth */
}

.nav-links.active li {
  margin: 0.75rem 0; /* Spacing for menu items */
}

.nav-links.active a {
  color: #fff; /* Link color in active mobile menu */
  padding: 0.5rem 1rem; /* Padding for tappable area */
  display: block; /* Make the whole area clickable */
  border-radius: 5px; /* Consistent with your hover style */
  transition: background-color 0.3s ease;
}

.nav-links.active a:hover {
  background: #1f3bb3; /* Hover effect for mobile menu items */
}

/*
  The .nav-toggle (hamburger icon) display is handled by Tailwind's responsive
  classes (e.g., 'md:hidden') in the HTML.
*/

/* ============================================= */
/* ========= STYLES NOW HANDLED BY TAILWIND ==== */
/* ============================================= */

/*
  The following sections from your original style.css are now largely or entirely
  handled by Tailwind CSS utility classes applied directly in the new HTML files:

  - HERO SECTION (.hero, .hero-content, .btn-primary)
  - GENERAL SECTION STYLES (.section, .section h2, .section-subtitle)
  - SERVICES SECTION (.services-grid, .service-card, .service-icon, etc.)
  - CYBER PROMO SECTION (.cyber-promo, .promo-content, .btn-etsy)
  - PRICING SECTION (#pricing, .pricing-tiers, .pricing-tier, etc.)
  - TOOLKIT CONTAINER & FORMS (.toolkit-container, input styles, .output-box, .btn-copy, .btn-check, .limit-warning)
    (These are now styled with Tailwind on tools.html and phishshield.html)
  - BLOG / TERMS / ABOUT PAGES (.info-block, .blog-post)
    (These are now styled with Tailwind on their respective pages)
  - FOOTER (.footer, .social-icons)
  - MEDIA QUERIES (Tailwind is mobile-first and uses responsive prefixes like sm:, md:, lg:)

  Therefore, these extensive style blocks can be removed from this CSS file if all
  your pages are using the new Tailwind HTML versions. Keeping them would lead to
  redundancy and potential conflicts.
*/

/* Example of a custom utility you might keep if absolutely necessary,
   though it's better to create Tailwind plugins or use @apply for this. */
/*
.custom-text-shadow {
  text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
}
*/
